name: main
on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: tag to checkout, must be semver, e.g. 5.2.2, actual list can be found here https://github.com/dotnet/SqlClient/tags
        required: true
        default: 5.2.2
jobs:
  main:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: dotnet/SqlClient
          ref: v${{ github.event.inputs.tag }}
      - uses: microsoft/setup-msbuild@v1.0.2
      - uses: nuget/setup-nuget@v1
      - run: choco install dotnet4.6.1
      - run: choco install dotnet4.6.1-devpack
      - run: choco install netfx-4.6.1-devpack
      - name: workaround netcore
        shell: powershell
        run: |
          $path = 'src/Microsoft.Data.SqlClient/netcore/src/Microsoft/Data/SqlClient/TdsParser.cs'
          $content = Get-Content $path -Raw
          $content = [regex]::Replace($content, 'SendPreLoginHandshake\([\s\S]+?\);', '// SendPreLoginHandshake(instanceName, encrypt, integratedSecurity, serverCertificateFilename);')
          $content = [regex]::Replace($content, 'PreLoginHandshakeStatus status\s*=\s*ConsumePreLoginHandshake\s*\([\s\S]+?\);', 'PreLoginHandshakeStatus status = PreLoginHandshakeStatus.Successful;')
          $content | Set-Content -Path $path
      - name: workaround netfx
        shell: powershell
        run: |
          $path = 'src/Microsoft.Data.SqlClient/netfx/src/Microsoft/Data/SqlClient/TdsParser.cs'
          $content = Get-Content $path -Raw
          $content = [regex]::Replace($content, 'SendPreLoginHandshake\([\s\S]+?\);', '// SendPreLoginHandshake(instanceName, encrypt, integratedSecurity, serverCertificateFilename);')
          $content = [regex]::Replace($content, 'PreLoginHandshakeStatus status\s*=\s*ConsumePreLoginHandshake\s*\([\s\S]+?\);', 'PreLoginHandshakeStatus status = PreLoginHandshakeStatus.Successful;')
          $content | Set-Content -Path $path
      - name: rename
        shell: powershell
        run: |
          $file = Get-Item tools/specs/Microsoft.Data.SqlClient.nuspec
          $spec = [xml] (Get-Content $file.FullName)
          $spec.package.metadata.id = 'Rabota.Data.SqlClient'
          $spec.package.metadata.title = 'Rabota.Data.SqlClient'
          $spec.package.metadata.authors = 'robota.ua'
          $spec.package.metadata.projectUrl = 'https://github.com/rabotaua/Rabota.SqlClient'
          $spec.package.metadata.description = 'Notice: this is not Microsoft library it is an robota.ua fork to fix issue with old SQLServer version in modern environments, if you found this library you probably want to use Microsoft.Data.SqlClient instead'
          $spec.package.metadata.releaseNotes = 'https://github.com/rabotaua/Rabota.SqlClient'
          $spec.package.metadata.copyright = 'robota.ua'
          $spec.Save($file.FullName)
      - run: msbuild /t:BuildAllConfigurations /p:Configuration=Release /p:NugetPackageVersion=${{ github.event.inputs.tag }}.${{ github.run_number }}
      - run: dotnet nuget push packages/Rabota.Data.SqlClient.${{ github.event.inputs.tag }}.${{ github.run_number }}.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --source https://api.nuget.org/v3/index.json
